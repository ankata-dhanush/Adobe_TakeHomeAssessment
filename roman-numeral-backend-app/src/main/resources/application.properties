spring.application.name=romannumerals


# Logging Levels
logging.level.root=INFO
# Log Pattern
# Console Log Pattern with Trace and Span ID
logging.pattern.console=%d [%X{traceId:-}] [%X{spanId:-}] %-5level %logger : %msg%n
# File Log Pattern with Trace and Span ID
logging.pattern.file=%d [%X{traceId:-}] [%X{spanId:-}] %-5level [%thread] %logger : %msg%n
# Log File Location
logging.file.name=/logs/roman-numeral.log
# Logback Rolling Policy
logging.logback.rollingpolicy.file-name-pattern=/logs/roman-numeral-%d{yyyy-MM-dd}.%i.log
logging.logback.rollingpolicy.clean-history-on-start=true
logging.logback.rollingpolicy.max-history=30
logging.logback.rollingpolicy.total-size-cap=10MB
logging.logback.rollingpolicy.max-file-size=1MB


# Expose health, metrics, and Prometheus endpoints
management.endpoints.web.exposure.include=health,metrics,prometheus
# Enable Prometheus metrics export
management.metrics.export.prometheus.enabled=true
# Show detailed health information
management.endpoint.health.show-details=always


# Enable OpenTelemetry tracing
otel.traces.exporter=jaeger
otel.metrics.exporter=none
otel.logs.exporter=none
# Jaeger GRPC Endpoint (if using Docker Compose, use `http://jaeger:14250`)
#otel.exporter.jaeger.endpoint=http://localhost:14250
otel.exporter.otlp.endpoint=http://localhost:4317
# Define the application name for tracing
otel.service.name=roman-numeral-app





